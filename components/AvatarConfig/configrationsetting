      <!-- {/* Configuration Section - Dark theme */}
      <div className="flex-overflow-scroll bg-gradient-to-br from-gray-700/50 via-gray-800/60 to-gray-900/70 rounded-2xl p-4 sm:p-6 border-2 border-gray-600/50 overflow-y-auto shadow-2xl">
        <h3 className="text-lg sm:text-xl lg:text-2xl font-bold text-center mb-6 sm:mb-8 text-white">
          ⚙️ Configuration Settings ⚙️
        </h3>
        
        {/* Arabic Language Setup Guide */}
        <div className="mb-6 p-4 bg-gradient-to-r from-blue-900/20 to-indigo-900/20 border border-blue-500/50 rounded-xl">
          <div className="flex items-start gap-3">
            <div className="w-8 h-8 bg-blue-500/20 rounded-full flex items-center justify-center flex-shrink-0">
              <span className="text-blue-400 text-lg">🇸🇦</span>
            </div>
            <div className="flex-1">
              <h4 className="text-blue-300 font-bold text-sm mb-2">🌍 Multi-Language Support</h4>
              <p className="text-blue-200 text-xs mb-3">
                To use Arabic or other languages, select your preferred language below. The avatar will understand and respond in the selected language.
              </p>
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-2 text-xs">
                <div className="bg-blue-800/30 p-2 rounded border border-blue-400/30">
                  <strong className="text-blue-100">🎤 Speech Recognition:</strong><br/>
                  <span className="text-blue-200">Converts your voice to text</span>
                </div>
                <div className="bg-blue-800/30 p-2 rounded border border-blue-400/30">
                  <strong className="text-blue-100">🔊 Voice Response:</strong><br/>
                  <span className="text-blue-200">Avatar speaks in selected language</span>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div className="space-y-4 sm:space-y-6">
          <Field label="🌍 Language">
            <Select
              isSelected={(option) => option.value === config.language}
              options={STT_LANGUAGE_LIST}
              renderOption={(option) => option.label}
              value={
                STT_LANGUAGE_LIST.find((option) => option.value === config.language)
                  ?.label
              }
              onSelect={(option) => onChange("language", option.value)}
            />
            {/* Language-specific help */}
            {config.language === "ar" && (
              <div className="mt-2 p-2 bg-blue-900/20 border border-blue-500/50 rounded-lg">
                <p className="text-blue-300 text-xs">
                  <strong>🇸🇦 Arabic Language Support:</strong><br/>
                  • Speech-to-Text: Supports Modern Standard Arabic and dialects<br/>
                  • Text-to-Speech: Available with Arabic voice models<br/>
                  • Right-to-Left: Text display supported<br/>
                  • Accent Recognition: Works with various Arabic accents
                </p>
              </div>
            )}
          </Field>
          
          <Field label="✨ Avatar Quality">
            <Select
              isSelected={(option) => option === config.quality}
              options={Object.values(AvatarQuality)}
              renderOption={(option) => option}
              value={config.quality}
              onSelect={(option) => onChange("quality", option)}
            />
          </Field>
          
          <Field label="🔊 Voice Chat Transport">
            <Select
              isSelected={(option) => option === config.voiceChatTransport}
              options={Object.values(VoiceChatTransport)}
              renderOption={(option) => option}
              value={config.voiceChatTransport}
              onSelect={(option) => onChange("voiceChatTransport", option)}
            />
          </Field>
          
          <Field label="🧠 Knowledge Base ID">
            <Input
              placeholder="Enter custom knowledge base ID"
              value={config.knowledgeId}
              onChange={(value) => onChange("knowledgeId", value)}
            />
            {/* Arabic knowledge base suggestions */}
            {config.language === "ar" && (
              <div className="mt-2 p-2 bg-purple-900/20 border border-purple-500/50 rounded-lg">
                <p className="text-purple-300 text-xs">
                  <strong>📚 Arabic Knowledge Base Suggestions:</strong><br/>
                  • <code>arabic-general</code> - General Arabic knowledge<br/>
                  • <code>arabic-business</code> - Business and professional Arabic<br/>
                  • <code>arabic-education</code> - Educational content in Arabic<br/>
                  • <code>arabic-culture</code> - Arabic culture and traditions
                </p>
              </div>
            )}
          </Field>
        </div>

        {/* Advanced Settings - Dark theme button */}
        <div className="mt-6 sm:mt-8 pt-4 sm:pt-6 border-t-2 border-gray-600/50">
          <button
            className="w-full sm:w-auto text-white text-sm cursor-pointer bg-gradient-to-r from-gray-600 via-gray-700 to-gray-800 hover:from-gray-700 hover:via-gray-800 hover:to-gray-900 border-2 border-gray-500/50 hover:border-gray-400/50 px-6 py-3 rounded-2xl transition-all duration-300 font-bold shadow-lg hover:shadow-xl transform hover:scale-105 hover:-rotate-1"
            onClick={() => setShowMore(!showMore)}
          >
            {showMore ? "🔽 Hide Advanced" : "🔼 Show Advanced"}
          </button>
        </div>

        {showMore && (
          <div className="mt-6 sm:mt-8 space-y-6 sm:space-y-8">
            <div className="border-t-2 border-gray-600/50 pt-6">
              <h4 className="text-base sm:text-lg font-bold text-center mb-4 sm:mb-6 text-white">
                🎵 Voice Settings
              </h4>
              <div className="space-y-4 sm:space-y-6">
                <Field label="🎤 Custom Voice ID">
                  <Input
                    placeholder="Enter custom voice ID"
                    value={config.voice?.voiceId}
                    onChange={(value) =>
                      onChange("voice", { ...config.voice, voiceId: value })
                    }
                  />
                  {/* Arabic voice suggestions */}
                  {config.language === "ar" && (
                    <div className="mt-2 p-2 bg-green-900/20 border border-green-500/50 rounded-lg">
                      <p className="text-green-300 text-xs">
                        <strong>🎯 Arabic Voice Suggestions:</strong><br/>
                        • <code>ar-SA-1</code> - Saudi Arabic (Male)<br/>
                        • <code>ar-EG-1</code> - Egyptian Arabic (Female)<br/>
                        • <code>ar-AE-1</code> - UAE Arabic (Male)<br/>
                        • <code>ar-MA-1</code> - Moroccan Arabic (Female)
                      </p>
                    </div>
                  )}
                </Field>
                <Field label="😊 Emotion">
                  <Select
                    isSelected={(option) => option === config.voice?.emotion}
                    options={Object.values(VoiceEmotion)}
                    renderOption={(option) => option}
                    value={config.voice?.emotion}
                    onSelect={(option) =>
                      onChange("voice", { ...config.voice, emotion: option })
                    }
                  />
                </Field>
                <Field label="🤖 ElevenLabs Model">
                  <Select
                    isSelected={(option) => option === config.voice?.model}
                    options={Object.values(ElevenLabsModel)}
                    renderOption={(option) => option}
                    value={config.voice?.model}
                    onSelect={(option) =>
                      onChange("voice", { ...config.voice, model: option })
                    }
                  />
                </Field>
              </div>
            </div>

            <div className="border-t-2 border-gray-600/50 pt-6">
              <h4 className="text-base sm:text-lg font-bold text-center mb-4 sm:mb-6 text-white">
                🎧 STT Settings
              </h4>
              <div className="space-y-4 sm:space-y-6">
                <Field label="🔧 Provider">
                  <Select
                    isSelected={(option) => option === config.sttSettings?.provider}
                    options={Object.values(STTProvider)}
                    renderOption={(option) => option}
                    value={config.sttSettings?.provider}
                    onSelect={(option) =>
                      onChange("sttSettings", {
                        ...config.sttSettings,
                        provider: option,
                      })
                    }
                  />
                </Field>
              </div>
            </div>
          </div>
        )}
      </div> -->